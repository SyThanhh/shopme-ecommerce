package com.shopme.admin.user;

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.shopme.admin.FileUploadUtil;
import com.shopme.admin.MessageAlertCheckNull;
import com.shopme.admin.security.ShopmeUserDetails;
import com.shopme.common.entity.User;

@Controller
public class AccountController {

	@Autowired
	private UserService userService;
	
	@GetMapping("/account")
	public String viewDetails(@AuthenticationPrincipal ShopmeUserDetails loggedUser , Model model) {
		String email = loggedUser.getUsername();
		User userDetails = userService.getByEmails(email);
		model.addAttribute("user",userDetails);
		model.addAttribute("pageTitle", "Your Account Details");
		
		return "account_form";
	}
	
	@PostMapping("/account/update")
	public String saveUser(User user,
			RedirectAttributes redirectAttributes,
			@AuthenticationPrincipal ShopmeUserDetails loggedUser,
			@RequestParam("image") MultipartFile multipartFile ) throws IOException {
		
		if(!multipartFile.isEmpty()) {
			String fileName = StringUtils.cleanPath(multipartFile.getOriginalFilename()); // sẽ làm sạch chuỗi đường dẫn tệp
			user.setPhotos(fileName);
			User savedUser = userService.updateAccount(user);
			
			String uploadDir = "user-photos/" + savedUser.getId();
			
			// clean file
			FileUploadUtil.cleanDir(uploadDir);
			
			// upload file into dir
			FileUploadUtil.saveFile(uploadDir, fileName, multipartFile);
			
			 redirectAttributes.addAttribute("message", "Your Account Details Updated Successfully");
		} else {
			if (user.getPhotos() == null || user.getPhotos().isEmpty()) {
	            user.setPhotos(null);
	        }
			User savedUser = userService.updateAccount(user);

		}
			loggedUser.setFirstName(user.getFirstName());
			loggedUser.setLastName(user.getLastName());
		 redirectAttributes.addAttribute("message", "Your Account Details Updated Successfully");
		return "redirect:/account";
	}
}
