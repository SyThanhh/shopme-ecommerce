package com.shopme.admin.category;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import org.apache.poi.hpsf.Array;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.shopme.common.entity.Category;

import javassist.expr.NewArray;

@Service
public class CategoryService {

	@Autowired
	private CategoryRepository cateRepo;
	
	public List<Category> listAll() {
		List<Category>  rootCategories = cateRepo.findRootCategories();
		return listHierachicalCategories(rootCategories);
	}
	
	private List<Category> listHierachicalCategories(List<Category> rootCategories) {
		List<Category> hierachicalCategories = new ArrayList<>();
		for (Category rootCategory : rootCategories) {
			
			hierachicalCategories.add(Category.copyFull(rootCategory));
			
			Set<Category> children = rootCategory.getChildren();
			
			for (Category subcate : children) {
				String name = "--" + subcate.getName();
				hierachicalCategories.add(Category.copyIdAndName(subcate.getId(), name));
				
				
			}
		}
		
		return rootCategories;
		
	}
	
	public List<Category> listCategoriesUsedInForm() {
		List<Category> categoriesUsedInForm = new ArrayList<>();
		
		Iterable<Category> listcategories = cateRepo.findAll();
		
		for (Category category : listcategories) {
			if(category.getParent() == null) {
				categoriesUsedInForm.add(category.copyIdAndName(category));
			
				Set<Category> children = category.getChildren();
				
				for (Category subcate : children) {
					String name = "--" + subcate.getName();
					categoriesUsedInForm.add(Category.copyIdAndName(subcate.getId(), name));
					listCategoriesUsedInForm(categoriesUsedInForm,subcate, 1);
					
				}
			}
		}
		return categoriesUsedInForm;
	}
	
	public void listCategoriesUsedInForm(List<Category> categoriesUsedInForm, 
			Category parent , int subLevel) {
		int newSubLevel = subLevel + 1;
	
		Set<Category> children = parent.getChildren();
	
		for (Category subCategory : children) {
			String name = "";
			for (int i = 0; i < newSubLevel; i++) {
				name += "--";
			}
			name += subCategory.getName();
			categoriesUsedInForm.add(Category.copyIdAndName(subCategory.getId(), name));
	
			listCategoriesUsedInForm(categoriesUsedInForm ,subCategory, newSubLevel);
		}

	}
	
	public Category saveCategory(Category category) {
		return cateRepo.save(category);
	}


}
