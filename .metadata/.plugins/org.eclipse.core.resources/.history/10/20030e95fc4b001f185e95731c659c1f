package com.shopme.admin.product;

import java.util.Date;
import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.shopme.admin.exception.CategoryNotFoundException;
import com.shopme.common.entity.Product;

@Service
@Transactional
public class ProductService {

	@Autowired
	private ProductRepository productRepository;
	
	public List<Product> findAll() {
		return (List<Product>) productRepository.findAll();
	}
	
	public Product saveProduct(Product product) {
		if(product.getId() == null) product.setCreatedTime(new Date());
		if(product.getAlias() == null || product.getName().isEmpty()) {
			String defaultAlias = product.getAlias().replace(" ", "-");
		} else {
			product.setAlias(product.getAlias().replace(" ", "-"));
		}
		
		product.setUpdatedTime(new Date());
		
		return productRepository.save(product);
	}

	public String checkUnique(Integer id, String name) {
		boolean checkProduct = (id == null || id == 0);
		Product productByName = productRepository.findByName(name);
		if(checkProduct) {
			if(productByName != null) return "Duplicate";
		} else {
			if(productByName != null && productByName.getId() != id) return "Duplicate";
		}
		return "OK";
		
	}

	public void updateStatusProduct(Integer id, boolean enabled) {
		productRepository.updateEnabledStatus(id, enabled);
		
	}

	public void deleteById(Integer id) throws CategoryNotFoundException {
		Long countById = productRepository.countById(id);

		if (countById == null || countById == 0) {
			throw new CategoryNotFoundException("Could not find any Product with ID " + id);
		}

		cateRepo.deleteById(id);
	}
	
	
}
