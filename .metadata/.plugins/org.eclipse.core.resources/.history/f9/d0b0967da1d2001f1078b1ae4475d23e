package com.shopme.admin.setting.country;

import static org.assertj.core.api.Assertions.assertThat;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.Optional;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.test.context.support.WithMockUser;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.shopme.common.entity.Country;

@SpringBootTest
@AutoConfigureMockMvc
@DataJpaTest
public class CountryRestControllerTests {

	@Autowired MockMvc mockMvc;
	
	@Autowired ObjectMapper objectMapper;
	
	@Autowired CountryRepository repo;
	
	@Test
	@WithMockUser(username ="nam@codejava.net", password = "java2020", roles = "ADMIN")
	public void testListCountries() throws Exception {
		String url = "/countries/list";
		MvcResult result = mockMvc.perform(get(url))
		        .andExpect(status().isOk())
		        .andDo(print())
		        .andReturn();
		 String responseContent = result.getResponse().getContentAsString();
		
		 Country[] countries = objectMapper.readValue(responseContent, Country[].class);
		
		 
		 assertThat(countries).hasSizeGreaterThan(0);	
	}
	
	@Test
	@WithMockUser(username ="nam@codejava.net", password = "java2020", roles = "ADMIN")
	public void testCreateCountry() throws Exception {
		String url = "/countries/save";
		String name = "Gemery";
		String code = "CA";
		Country country = new Country(name, code);
		MvcResult result = mockMvc.perform(post(url).contentType("application/json")
				.content(objectMapper.writeValueAsString(country)).with(csrf()))
		        .andExpect(status().isOk())
		        .andDo(print())
		        .andReturn();
		 String response = result.getResponse().getContentAsString();
		
		 Integer countryID = Integer.parseInt(response);
		 Country countById = entityManager.find(Country.class, countryID);
		 
		 assertThat(countById.getName()).isEqualTo(name);
	}
}
