package com.shopme.admin.brand;

import static org.assertj.core.api.Assertions.assertThat;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import com.shopme.common.entity.Brand;

@ExtendWith(MockitoExtension.class) // kích hoạt mockito
@ExtendWith(SpringExtension.class) // kích hoạt spring testcontext 
public class BrandServiceTests {

	
	@MockBean
	private BrandRepository brandRepository;
	
	@InjectMocks
	private BrandService brandService;
	
	@Test
	public void TestCreatNewBrandDulicated() {
		Integer id = null;
		String name = "Acer";
		
		Brand newBrand= new Brand(name);
		
		Mockito.when(brandRepository.findByName(name)).thenReturn(newBrand);
		String check=brandService.checkUnique(id, name);
		assertThat(check).isEqualTo("Duplicate");
	}
	
	@Test
	public void TestCreatNewBrandOK() {
		Integer id = null;
		String name = "Asus";
		
		Brand newBrand= new Brand(name);
		
		Mockito.when(brandRepository.findByName(name)).thenReturn(newBrand);
		String check=brandService.checkUnique(id, name);
		assertThat(check).isEqualTo("Duplicate");
	}
}
